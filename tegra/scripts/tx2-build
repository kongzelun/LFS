#!/bin/bash
# 
# tx2-build
#

VERSION=1.1
BUILDDIR=/dev/shm
LOGDIR=/dev/shm

# arguments/options

TARGET=''
STAGE=0

# packages

stage1_pkgs=(
    # pacman mpdecimal python
    pacman-contrib
)

# functions

prepare() {
    sudo ln -sf python3 /usr/bin/python
    build-zsh
    build-pacman
}

build() {
    local pkg
    pkg=$1

    cd $ROOTDIR/$TARGET/$pkg

    local log
    log="$LOGDIR"/$pkg.stage$STAGE.log
    if [ -f $log ]; then
        rm $log
    fi
    
    makepkg -scCf --skippgpcheck --noconfirm &>> $log

    case $pkg in
        *)
            update-repo $TARGET
            (yes yes || :) | sudo pacman -Sy --overwrite "*" $pkg
            ;;
    esac
}

usage() {
	printf "lfs-build (kzl-linux) %s\n" "$VERSION"
	echo
	printf "lfs-build will build custom packages from scratch.\n"
	echo
	printf "Usage: lfs-build [options]\n"
	echo
	echo "    -h, --help        display this help message and exit"
	echo "    -v, --version     display version information and exit"
	echo "    -s, --stage       stage (stage0 (default), stage1)"
    echo
}

# program start

set -e -u -o pipefail
# set -x

# ensure we have a sane umask set
umask 0022

scriptdir=$(pwd)

while (( "$#" )); do
	case "$1" in
        -h|--help)      usage; exit 0 ;;
        -v|--version)   printf "$VERSION"; exit 0 ;;
        -s|--stage)     shift; STAGE="$1" ;;
	esac
    shift
done

TARGET=tx2
REPODIR=/home/.repository/$TARGET
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

if [ -d $BUILDDIR/makepkg ]; then
    rm -rf $BUILDDIR/makepkg
fi

case $STAGE in
    0) prepare; exit 0 ;;
    1) pkgs=${stage1_pkgs[@]} ;;
    *) printf "unknown stage \"$STAGE\""; exit 1 ;;
esac

(yes yes || :) | sudo pacman -Scc

for p in ${pkgs[@]}; do
    echo "building $p ..."
    build $p
    sudo ldconfig
done
