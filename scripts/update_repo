#!/bin/bash
# 
# update_repo
#

VERSION=1.0
REPODIR=/var/repository

# options
REPLACE=0

# functions
update() {
    local repo
    repo=$1
    local pkg
    pkg=$2

    pkgname=$pkg-[0-9]*.pkg.tar.zst

    if [ -f ~/makepkg/packages/$pkgname ]; then
        sudo rm -f /var/repository/$repo/$pkgname
        sudo mv ~/makepkg/packages/$pkgname $REPODIR/$repo
        sudo repo-add -R $REPODIR/$repo/$repo.db.tar.zst $REPODIR/$repo/$pkgname
    fi

    if (( REPLACE )) && [ -f $REPODIR/$repo/$pkgname ] ; then
        sudo repo-add -R $REPODIR/$repo/$repo.db.tar.zst $REPODIR/$repo/$pkgname
    fi
}

usage() {
	printf "update_repo (kzl-linux) %s\n" "$VERSION"
	echo
	printf "\"update_repo\" will update the pacman repository.\n"
	echo
	printf "Usage: update_repo [options] [repo]\n"
	echo
	echo "    -h, --help        display this help message and exit"
	echo "    -v, --version     display version information and exit"
    echo "    -R, --replace     replace old repo"
    echo
}

# program start

# set -exu -o pipefail
set -e -u -o pipefail

# ensure we have a sane umask set
umask 0022

scriptdir=$(pwd)
repo=

while (( "$#" )); do
	case "$1" in
        -h|--help)      usage; exit 0 ;;
        -v|--version)   printf "$VERSION"; exit 0 ;;
		-R|--replace)   REPLACE=1; shift ;;
        *)              repo="$1"; break 2 ;;
	esac
done

case $repo in
    core)               pkgs=$(ls $scriptdir/../$repo/)
                        pkgs+=" linux" ;;
    extra|community)    pkgs=$(ls $scriptdir/../$repo/)
                        pkgs+=" minizip"
                        pkgs+=" python-audit";;
    # unknown repo
    *)                  printf "unknown repo \"%s\".\n" "$repo"; exit 1 ;;
esac

if [ ! -d $REPODIR/$repo ]; then
    sudo mkdir -p $REPODIR/$repo
fi

if (( REPLACE )); then
    sudo find $REPODIR/$repo -name "$repo.*" -delete
fi

if [ ! -f $REPODIR/$repo/$repo.db.tar.zst ]; then
    sudo repo-add $REPODIR/$repo/$repo.db.tar.zst
fi

for p in ${pkgs[@]}; do
    case $p in
        openldap)   update $repo libldap ;;
        lvm2)       update $repo lvm2; update $repo device-mapper ;;
        *)          update $repo $p;;
    esac
done
